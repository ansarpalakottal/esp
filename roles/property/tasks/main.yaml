---
###CHANGING TO THE CONFIG FILE DIRECTORY
- name: changing to the client directory
  shell: cd {{ version_docs }}/{{ extra_var_client }}

###CHECKING THE STATUS OF THE EXISTING FILE AND REGISTERING IT TO stat_properties
- name: checking the status of the properties file- "{{ version_docs }}/{{ extra_var_client }}/resources/helium.properties"
  stat:
    path: "{{ version_docs }}/{{ extra_var_client }}/resources/helium.properties"
  register: stat_properties

###TAKING BACKUP OF THE PROPERTIES FILE(helium.properties) IF THE FILE EXISTING
- name: taking backups of the "{{ version_docs }}/{{ extra_var_client }}/resources/helium.properties" file
  copy:
    src: "{{ version_docs }}/{{ extra_var_client }}/resources/helium.properties"
    dest: "{{ version_docs }}/{{ extra_var_client }}/resources/helium.properties_{{ dt }}"
  when: stat_properties.stat.exists == true

###IF THE helium.properties FILE IS NOT EXISTING IT PRINTS WARNIGN MESSAGE
- debug:
    msg: The file, {{ version_docs }}/{{ extra_var_client }}/resources/helium.properties not exists
  when: stat_properties.stat.exists != true

###CHECKING THE STATUS OF THE PROPERTIES FILE(helium_b.properties) AND REGISTERING IT TO stat_b_properties
- name: checking the status of the properties file- "{{ version_docs }}/{{ extra_var_client }}/resources/helium_b.properties"
  stat:
    path: "{{ version_docs }}/{{ extra_var_client }}/resources/helium_b.properties"
  register: stat_b_properties

###TAKING BACKUP OF THE PROPERTIES FILE(helium_b.properties) IF THE FILE EXISTING
- name: taking backups of the "{{ version_docs }}/{{ extra_var_client }}/resources/helium_b.properties" file
  copy:
    src: "{{ version_docs }}/{{ extra_var_client }}/resources/helium_b.properties"
    dest: "{{ version_docs }}/{{ extra_var_client }}/resources/helium_b.properties_{{ dt }}"
  when: stat_b_properties.stat.exists == true

###IF THE helium_b.properties FILE IS NOT EXISTING IT PRINTS WARNIGN MESSAGE
- debug: 
    msg: The file, {{ version_docs }}/{{ extra_var_client }}/resources/helium_b.properties not exists
  when: stat_b_properties.stat.exists != true

###CHECKING THE helium.properties EXISTS OR NOT IN THE SOURCE BEFORE DEPLOYING
- name: checking the new helium.properties existing on the source to deploy
  stat:
    path: "/usr/local/ccms/esp/jclass/esp_depl_cfg/config/{{ env }}/{{ extra_var_client }}/helium.properties"
  register: stat_properties_src

###DEPLOYING THE helium.properties FILE IF IT IS EXISTS IN THE SOURCE
- name: deploying the helium.properties file if it is existing in the source
  copy:
    src: "/usr/local/ccms/esp/jclass/esp_depl_cfg/config/{{ env }}/{{ extra_var_client }}/helium.properties"
    dest: "{{ version_docs }}/{{ extra_var_client }}/resources/helium.properties"
  when: stat_properties_src.stat.exists == true

###PRINTING WARNING MESSAGE IF THE FILE helium.properties DOES NOT EXISTS IN THE SOURCE
- debug:
    msg: helium.properties DOESNOT exists under /usr/local/ccms/esp/jclass/esp_depl_cfg/config/{{ env }}/{{ extra_var_client }}/helium.properties
  when: stat_properties_src.stat.exists != true

###CHECKING THE helium_b.properties EXISTS OR NOT IN THE SOURCE BEFORE DEPLOYING
- name: checking the new helium_b.properties existing on the source to deploy
  stat:
    path: "/usr/local/ccms/esp/jclass/esp_depl_cfg/config/{{ env }}/{{ extra_var_client }}/helium_b.properties"
  register: stat_b_properties_src

###DEPLOYING THE helium_b.properties FILE IF IT IS EXISTS IN THE SOURCE
- name: deploying the helium_b.properties file if it is existing in the source
  copy:
    src: "/usr/local/ccms/esp/jclass/esp_depl_cfg/config/{{ env }}/{{ extra_var_client }}/helium_b.properties"
    dest: "{{ version_docs }}/{{ extra_var_client }}/resources/helium_b.properties"
  when: stat_b_properties_src.stat.exists == true

###PRINTING WARNING MESSAGE IF THE FILE helium_b.properties DOES NOT EXISTS IN THE SOURCE
- debug:
    msg: helium_b.properties DOESNOT exists under /usr/local/ccms/esp/jclass/esp_depl_cfg/config/{{ env }}/{{ extra_var_client }}/helium_b.properties
  when: stat_b_properties_src.stat.exists != true
